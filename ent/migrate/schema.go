// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ListingsColumns holds the columns for the "listings" table.
	ListingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString, Size: 120},
		{Name: "address", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "city", Type: field.TypeString, Size: 255},
		{Name: "state", Type: field.TypeString, Size: 3},
		{Name: "zip_code", Type: field.TypeString, Size: 6},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "price", Type: field.TypeFloat64, SchemaType: map[string]string{"postgres": "numeric"}},
		{Name: "bedroom", Type: field.TypeInt},
		{Name: "bathroom", Type: field.TypeFloat64},
		{Name: "garage", Type: field.TypeInt, Nullable: true},
		{Name: "sqft", Type: field.TypeInt},
		{Name: "type_of_property", Type: field.TypeEnum, Enums: []string{"house", "apartment", "condo", "townhouse"}, Default: "house"},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"DRAFT", "PUBLISHED", "ARCHIVED"}, Default: "DRAFT"},
		{Name: "lot_size", Type: field.TypeInt, Nullable: true},
		{Name: "pool", Type: field.TypeBool, Nullable: true},
		{Name: "year_built", Type: field.TypeInt},
		{Name: "media", Type: field.TypeJSON, Nullable: true},
		{Name: "realtor_id", Type: field.TypeUUID},
	}
	// ListingsTable holds the schema information for the "listings" table.
	ListingsTable = &schema.Table{
		Name:       "listings",
		Columns:    ListingsColumns,
		PrimaryKey: []*schema.Column{ListingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "listings_realtors_listings",
				Columns:    []*schema.Column{ListingsColumns[20]},
				RefColumns: []*schema.Column{RealtorsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "listing_title",
				Unique:  false,
				Columns: []*schema.Column{ListingsColumns[3]},
			},
			{
				Name:    "listing_address",
				Unique:  false,
				Columns: []*schema.Column{ListingsColumns[4]},
			},
			{
				Name:    "listing_type_of_property",
				Unique:  false,
				Columns: []*schema.Column{ListingsColumns[14]},
			},
			{
				Name:    "listing_realtor_id",
				Unique:  false,
				Columns: []*schema.Column{ListingsColumns[20]},
			},
		},
	}
	// RealtorsColumns holds the columns for the "realtors" table.
	RealtorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "full_name", Type: field.TypeString, Size: 100},
		{Name: "photo", Type: field.TypeJSON, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 500},
		{Name: "phone", Type: field.TypeString, Size: 20},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "is_mvp", Type: field.TypeBool, Default: false},
		{Name: "hire_date", Type: field.TypeTime},
	}
	// RealtorsTable holds the schema information for the "realtors" table.
	RealtorsTable = &schema.Table{
		Name:       "realtors",
		Columns:    RealtorsColumns,
		PrimaryKey: []*schema.Column{RealtorsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "realtor_full_name",
				Unique:  false,
				Columns: []*schema.Column{RealtorsColumns[3]},
			},
			{
				Name:    "realtor_email",
				Unique:  true,
				Columns: []*schema.Column{RealtorsColumns[7]},
			},
			{
				Name:    "realtor_phone",
				Unique:  true,
				Columns: []*schema.Column{RealtorsColumns[6]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "avatar", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 120},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 120},
		{Name: "full_name", Type: field.TypeString, Size: 100},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "is_staff", Type: field.TypeBool, Default: false},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "password", Type: field.TypeString, Size: 128},
		{Name: "provider", Type: field.TypeString, Default: "email"},
		{Name: "provider_id", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[4]},
			},
			{
				Name:    "user_username",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[5]},
			},
			{
				Name:    "user_provider_provider_id",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[11], UsersColumns[12]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ListingsTable,
		RealtorsTable,
		UsersTable,
	}
)

func init() {
	ListingsTable.ForeignKeys[0].RefTable = RealtorsTable
}
